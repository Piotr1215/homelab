---
# CronJob to monitor and restart stuck kagent agents
apiVersion: v1
kind: ConfigMap
metadata:
  name: kagent-monitor-script
  namespace: kagent
data:
  monitor.sh: |
    #!/bin/sh
    echo "Checking kagent agents at $(date)"
    
    # Get CPU usage for k8s-agent
    CPU_USAGE=$(kubectl top pod -n kagent -l app.kubernetes.io/name=k8s-agent --no-headers 2>/dev/null | awk '{print $2}' | sed 's/m//')
    
    if [ -n "$CPU_USAGE" ] && [ "$CPU_USAGE" -gt 400 ]; then
        echo "WARNING: k8s-agent using ${CPU_USAGE}m CPU"
        
        # Check again after 30 seconds to confirm it's stuck
        sleep 30
        CPU_USAGE_2=$(kubectl top pod -n kagent -l app.kubernetes.io/name=k8s-agent --no-headers 2>/dev/null | awk '{print $2}' | sed 's/m//')
        
        if [ -n "$CPU_USAGE_2" ] && [ "$CPU_USAGE_2" -gt 400 ]; then
            echo "Agent stuck at high CPU (${CPU_USAGE_2}m), restarting..."
            kubectl rollout restart deployment k8s-agent -n kagent
            echo "Restart initiated at $(date)"
        else
            echo "CPU usage dropped to ${CPU_USAGE_2}m, no restart needed"
        fi
    else
        echo "k8s-agent CPU usage normal: ${CPU_USAGE}m"
    fi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kagent-monitor
  namespace: kagent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kagent-monitor
  namespace: kagent
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kagent-monitor
  namespace: kagent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kagent-monitor
subjects:
- kind: ServiceAccount
  name: kagent-monitor
  namespace: kagent
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kagent-monitor
  namespace: kagent
spec:
  schedule: "*/5 * * * *"  # Run every 5 minutes
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: kagent-monitor
          restartPolicy: OnFailure
          containers:
          - name: monitor
            image: bitnami/kubectl:latest
            command:
            - /bin/sh
            - /scripts/monitor.sh
            volumeMounts:
            - name: script
              mountPath: /scripts
            resources:
              limits:
                cpu: 100m
                memory: 128Mi
              requests:
                cpu: 50m
                memory: 64Mi
          volumes:
          - name: script
            configMap:
              name: kagent-monitor-script
              defaultMode: 0755